server:
  port: 8080
  servlet:
    context-path: /api/v1
  # Trust reverse proxy forwarded headers (e.g., X-Forwarded-For / X-Real-IP)
  forward-headers-strategy: native
spring:
  application:
    name: codetop-fsrs-backend
  
  profiles:
    active: dev
    
  # Disable DevTools restart to avoid classloader conflicts
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
    
  # Allow circular references (for security filter chain)
  main:
    allow-circular-references: true
  # Database Configuration
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # Database Connection
      url: jdbc:mysql://localhost:3307/codetop_fsrs?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true
      username: ${DB_USERNAME:root}
      password: ${DB_PASSWORD:root}
      driver-class-name: com.mysql.cj.jdbc.Driver
      
      # Connection Pool Settings
      initial-size: 10
      min-idle: 10
      max-active: 200
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      
      # Performance Monitoring
      filters: stat,wall,log4j2
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      
      # SQL Monitoring
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6380}
      database: 0
      timeout: 6000ms
      jedis:
        pool:
          max-active: 100
          max-wait: -1ms
          max-idle: 10
          min-idle: 5
    
    # MongoDB Configuration
    mongodb:
      uri: mongodb://root:root@localhost:27018/codetop_notes?authSource=admin
      auto-index-creation: true
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1 hour default TTL
      cache-null-values: false
      key-prefix: "codetop:cache:"
  
  # Session Configuration
  session:
    store-type: redis
    timeout: 24h
  # Security Configuration - OAuth2 disabled by default in dev
  # Uncomment and configure with environment variables to enable OAuth2
  # security:
  #   oauth2:
  #     client:
  #       registration:
  #         github:
  #           client-id: ${GITHUB_CLIENT_ID:}
  #           client-secret: ${GITHUB_CLIENT_SECRET:}
  #           scope: user:email
  #         google:
  #           client-id: ${GOOGLE_CLIENT_ID:}
  #           client-secret: ${GOOGLE_CLIENT_SECRET:}
  #           scope: openid,profile,email
  
  # Jackson Configuration
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null

# MyBatis-Plus Configuration
mybatis-plus:
  # Mapper XML Location
  mapper-locations: classpath*:mapper/**/*.xml
  
  # Entity Package
  type-aliases-package: com.codetop.entity
  
  # Configuration
  configuration:
    # Camel case mapping
    map-underscore-to-camel-case: true
    # Disable MyBatis second-level cache to avoid stale data with external Redis caching
    cache-enabled: false
    # Lazy loading
    lazy-loading-enabled: true
    aggressive-lazy-loading: false
    # Multiple result sets
    multiple-result-sets-enabled: true
    # Auto mapping
    auto-mapping-behavior: partial
    auto-mapping-unknown-column-behavior: warning
    # SQL Logging
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  
  # Global Configuration
  global-config:
    db-config:
      # Database ID Strategy
      id-type: auto
      # Table name prefix
      table-prefix: ""
      # Logical deletion
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      # Field insertion strategy
      insert-strategy: not_null
      # Field update strategy
      update-strategy: not_null
      # Field selection strategy
      select-strategy: not_null

# JWT Configuration - REQUIRES ENVIRONMENT VARIABLES IN PRODUCTION
jwt:
  secret: ${JWT_SECRET:test_secret}
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours in milliseconds
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days in milliseconds
  
# Application Security Configuration
app:
  security:
    druid:
      enabled: ${DRUID_SECURITY_ENABLED:false}
      admin-role: ${DRUID_ADMIN_ROLE:ADMIN}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
  rate-limit:
    enabled: ${RATE_LIMIT_ENABLED:true}
    per-user: ${RATE_LIMIT_PER_USER:100}  # requests per minute
    per-ip: ${RATE_LIMIT_PER_IP:1000}     # requests per minute
    window-minutes: ${RATE_LIMIT_WINDOW:1}

# FSRS Configuration
fsrs:
  # Default FSRS Parameters (17 parameters) - Optimized for algorithm problems
  default-parameters:
    # Initial Stability Parameters (w[0-3])
    - 0.4072  # w[0] - initial stability for Again rating
    - 1.1829  # w[1] - initial stability for Hard rating (reduced for shorter intervals)
    - 3.1262  # w[2] - initial stability for Good rating
    - 15.4722 # w[3] - initial stability for Easy rating
    
    # Difficulty Parameters (w[4-8])
    - 5.0746  # w[4] - initial difficulty calculation
    - -1.2025 # w[5] - difficulty change for Again
    - -1.5374 # w[6] - difficulty change for Hard  
    - 0.0465  # w[7] - difficulty change for Good
    - 1.6477  # w[8] - difficulty change for Easy
    
    # Stability Growth Parameters (w[9-16])
    - -0.5890 # w[9] - stability factor after Again
    - 1.0994  # w[10] - stability factor after Hard
    - -2.0567 # w[11] - stability factor after Good
    - -0.2192 # w[12] - additional stability factor
    - 0.8577  # w[13] - retrievability impact on stability
    - 0.0884  # w[14] - time factor in stability calculation
    - 2.0777  # w[15] - lapse impact factor
    - 0.8236  # w[16] - interval bonus factor
  
  # Algorithm Settings
  target-retention: 0.9  # 90% retention rate
  maximum-interval: 365  # Maximum interval in days
  minimum-interval: 1    # Minimum interval in days
  
  # Parameter Optimization Settings
  optimization:
    minimum-reviews: 50      # Minimum reviews needed for parameter optimization
    batch-size: 1000         # Batch size for parameter optimization
    learning-rate: 0.001     # Learning rate for gradient descent
    epochs: 100              # Maximum epochs for optimization

# Cache Configuration
cache:
  redis:
    # TTL Configuration (in seconds)
    ttl:
      user: 3600           # 1 hour
      problem: 7200        # 2 hours
      review-queue: 1800   # 30 minutes
      analytics: 3600      # 1 hour
      leaderboard: 1800    # 30 minutes

# User Profiling Configuration
user-profiling:
  windows:
    recent-days: 90              # Analysis window in days
    half-life-days: 30.0         # Time decay half-life for recency weighting
    default-review-limit: 2000   # Maximum reviews to fetch from database
    trend-comparison-days: 30    # Window size for difficulty trend computation
  thresholds:
    min-samples-for-reliability: 10    # Minimum samples needed for reliable skill assessment
    weak-skill-threshold: 0.45         # Below this score = weak skill
    strong-skill-threshold: 0.75       # Above this score = strong skill
    beta-smoothing-alpha: 1.0          # Beta distribution smoothing parameter alpha
    beta-smoothing-beta: 1.0           # Beta distribution smoothing parameter beta
    difficulty-trend-threshold: 0.15   # 15% change threshold for trend detection
  cache:
    ttl: PT1H                    # Cache TTL (ISO 8601 duration: PT1H = 1 hour)
    enabled: true                # Enable/disable caching
  tag-domain-mapping:
    # Core data structures
    array: arrays
    linked-list: linked_lists
    hash-table: hash_tables
    string: strings
    matrix: matrices
    # Two pointers and sliding window
    two-pointers: two_pointers
    sliding-window: sliding_window
    # Search and sort
    binary-search: binary_search
    sorting: sorting
    # Advanced algorithms
    backtracking: backtracking
    divide-and-conquer: divide_conquer
    greedy: greedy
    dynamic-programming: dynamic_programming
    # Graph and tree algorithms  
    graph: graph
    tree: trees
    binary-tree: binary_trees
    trie: tries
    union-find: union_find
    # Heap and priority queue
    heap: heaps
    priority-queue: heaps
    # Stack and queue
    stack: stacks_queues
    queue: stacks_queues
    monotonic-stack: monotonic_stack
    # Mathematical and bit manipulation
    bit-manipulation: bit_manipulation
    math: math
    geometry: geometry
    prefix-sum: prefix_sum
    # System design and simulation
    design: system_design
    simulation: simulation

# API Documentation
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: alpha
    tags-sorter: alpha
    doc-expansion: none
  info:
    title: CodeTop FSRS Backend API
    description: Intelligent algorithm problem management with FSRS spaced repetition
    version: 1.0.0

# LLM configuration with segmented routing and feature toggles
llm:
  enabled: ${LLM_ENABLED:false}  # Global LLM toggle, disabled by default
  provider: chain
  defaultChainId: main   # Default chain when no routing rules match
  
  # Multiple chains for different user segments
  chains:
    main:                               # Standard chain for most users
      nodes:
        - name: openai   # DeepSeek via OpenAI-compatible API
          enabled: true
          timeoutMs: 1800
          retry:
            attempts: 1
          onErrorsToNext: [TIMEOUT, HTTP_429, HTTP_5XX, PARSING_ERROR, CIRCUIT_OPEN]
          rateLimit:
            rps: 5
            perUserRps: 1
        - name: mock
          enabled: false
      defaultProvider:
        strategy: fsrs_fallback   # Fallback to FSRS on failure
        message: "系统繁忙，请稍后重试"
        httpStatus: 503
        
    premium:                            # Enhanced chain for premium users
      nodes:
        - name: openai
          enabled: true
          timeoutMs: 1200           # Faster timeout for premium
          retry:
            attempts: 2             # More retries for premium
          rateLimit:
            rps: 10                 # Higher rate limits
            perUserRps: 3
      defaultProvider:
        strategy: fsrs_fallback
        
    experimental:                       # Experimental chain for A/B testing
      nodes:
        - name: openai
          enabled: true
          timeoutMs: 1500
          retry:
            attempts: 1
      defaultProvider:
        strategy: busy_message
        message: "实验功能暂不可用"
  
  # Legacy single chain (for backward compatibility)
  chain:
    nodes:
      - name: openai
        enabled: true
        timeoutMs: 1800
        retry:
          attempts: 1
        onErrorsToNext: [TIMEOUT, HTTP_429, HTTP_5XX, PARSING_ERROR, CIRCUIT_OPEN]
        rateLimit:
          rps: 5
          perUserRps: 1
    defaultProvider:
      strategy: fsrs_fallback
      
  # Routing rules for chain selection (evaluated in order, first match wins)
  routing:
    rules:
      - when:
          tier: [GOLD, PLATINUM]    # Premium users get enhanced chain
        useChain: premium
      - when:
          abGroup: [experimental]   # Experimental AB group
        useChain: experimental
      - when:
          route: [ai-recommendations]  # Default route uses main chain
        useChain: main
        
  # Feature toggles per user segment
  toggles:
    byTier:                       # Enable/disable by user tier
      FREE: false                 # FREE users cannot use LLM
      BRONZE: true                # BRONZE and above can use LLM
      SILVER: true
      GOLD: true
      PLATINUM: true
    byAbGroup:                    # Enable/disable by A/B testing group
      A: true
      B: true
      experimental: true
      default: true
    byRoute:                      # Enable/disable by API route
      ai-recommendations: true
      legacy-recommendations: false
    allowUserIds: []              # Always allow these user IDs (overrides other toggles)
    denyUserIds: []               # Always deny these user IDs (highest priority)
    
  # Provider configurations
  openai:
    baseUrl: https://api.deepseek.com/v1
    model: deepseek-chat
    apiKeyEnv: DEEPSEEK_API_KEY
    timeoutMs: 1800
    
  # Async concurrency limits
  asyncLimits:
    globalConcurrency: 10         # Maximum concurrent async requests globally
    perUserConcurrency: 2         # Maximum concurrent async requests per user  
    acquireTimeoutMs: 100         # Timeout to acquire rate limit permit

# Resilience4j configuration for LLM
resilience4j:
  ratelimiter:
    instances:
      llm-global:
        limit-for-period: 5
        limit-refresh-period: 1s
        timeout-duration: 0
  retry:
    instances:
      llm-retry:
        max-attempts: 2  # 1 retry
        wait-duration: 150ms
    contact:
      name: CodeTop Team
      email: support@codetop.com

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  health:
    redis:
      enabled: true
    db:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.codetop: DEBUG
    com.codetop.security: INFO
    com.codetop.service.AuthService: INFO
    com.codetop.util.JwtUtil: INFO
    com.codetop.logging: DEBUG
    com.codetop.controller: INFO
    com.codetop.service: INFO
    com.codetop.algorithm: DEBUG
    com.codetop.mapper: DEBUG
    org.springframework.security: WARN
    org.springframework.web: WARN
    com.baomidou.mybatisplus: DEBUG
    org.apache.ibatis: DEBUG
    org.redisson: WARN
    com.alibaba.druid: WARN
  config: classpath:logback-spring.xml

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  autoconfigure:
    exclude:
      - org.redisson.spring.starter.RedissonAutoConfigurationV2
  
  # Development MongoDB Configuration
  data:
    mongodb:
      uri: mongodb://localhost:27017/codetop_notes_dev
      auto-index-creation: true

# Development CORS settings
app:
  cors:
    allowed-origins: "http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004,http://127.0.0.1:3000"
  # Enable API docs in dev only
  docs:
    enabled: true
  # cache.double-delete-delay-millis configured above
  security:
    cookies:
      enabled: true
      access-name: ACCESS_TOKEN
      refresh-name: REFRESH_TOKEN
      same-site: Lax
      secure: false
    ai-recs-public: true
  cache:
    double-delete-delay-millis: 500

# Development JWT (still requires env var for security)
jwt:
  secret: ${JWT_SECRET:development_secret_key_minimum_256_bits_long_for_security_requirements_2024}
  
  # H2 for quick development (optional)
  h2:
    console:
      enabled: false

  # Disable Spring Session store in dev if not required
  session:
    store-type: none

logging:
  level:
    com.codetop.fsrs: DEBUG
    org.springframework.web: DEBUG

# Development LLM settings - enable for testing
llm:
  enabled: true  # Enable in dev for testing

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    druid:
      url: jdbc:mysql://localhost:3307/codetop_fsrs_test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
  
  data:
    redis:
      database: 1
    # Test MongoDB Configuration
    mongodb:
      uri: mongodb://icon:xxhh..@localhost:27017/codetop_notes_test
      auto-index-creation: true

logging:
  level:
    root: WARN
    com.codetop.fsrs: INFO

# Test LLM settings - disabled for testing stability  
llm:
  enabled: false  # Disable in test to focus on core functionality

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
  # Production OAuth2 configuration - REQUIRED environment variables
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: user:email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email

  datasource:
    druid:
      url: ${DATABASE_URL}
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      
      # Production pool settings
      initial-size: 20
      max-active: 500
      
      # Disable monitoring in production
      stat-view-servlet:
        enabled: false
  
  data:
    redis:
      # Prefer full URL in production (e.g. redis://:password@redis:6379/0)
      url: ${REDIS_URL:}
      # Fallback host/port if URL not provided
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      jedis:
        pool:
          max-active: 200
    
    # Production MongoDB Configuration
    mongodb:
      uri: ${MONGODB_URI:mongodb://user:password@localhost:27017/codetop_notes_prod}
      auto-index-creation: false

# Production security settings - MUST use environment variables
app:
  security:
    druid:
      enabled: true
      admin-role: ADMIN
    cookies:
      enabled: true
      access-name: ACCESS_TOKEN
      refresh-name: REFRESH_TOKEN
      secure: true
      same-site: Strict
      domain: ${COOKIE_DOMAIN:}
      path: /
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}

# Production JWT configuration - MUST be set via environment
jwt:
  secret: ${JWT_SECRET}  # REQUIRED - Must be 256+ bits
  expiration: ${JWT_EXPIRATION:3600000}  # 1 hour in production
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000}  # 24 hours

logging:
  level:
    root: INFO
    com.codetop: INFO
    org.springframework.web: WARN
    com.baomidou.mybatisplus: INFO
    org.apache.ibatis: WARN
    org.redisson: INFO
    com.alibaba.druid: WARN
  file:
    name: /var/log/codetop-fsrs-backend.log

# Production LLM settings - must be explicitly enabled via environment
# Production LLM settings - must be explicitly enabled via environment
llm:
  enabled: ${LLM_ENABLED:false}  # Must set LLM_ENABLED=true to enable
  openai:
    baseUrl: ${LLM_BASE_URL:https://api.deepseek.com/v1}
    model: ${LLM_MODEL:deepseek-chat}
    apiKeyEnv: DEEPSEEK_API_KEY  # Environment variable name
    timeoutMs: ${LLM_TIMEOUT:2000}

# Harden actuator exposure in production
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    env:
      enabled: false
    loggers:
      enabled: false
